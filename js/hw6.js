// Task 1 

//–î–∞–Ω –º–∞—Å—Å–∏–≤:

//    const colors = ['red', 'green', 'blue']

//–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.

const colors = ['red', 'green', 'blue'];
   console.log(colors.length);
    
   // Task 2 

   //–î–∞–Ω –º–∞—Å—Å–∏–≤:
   
    //   const animals = ['monkey', 'dog', 'cat']
   
  // –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.
   
  const animals = ['monkey', 'dog', 'cat']
  console.log(animals.slice(-1.1));

  // Task 3 
 
//–î–∞–Ω –º–∞—Å—Å–∏–≤:

  //  const numbers = [5, 43, 63, 23, 90]

//–£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.

const numbers = [5, 43, 63, 23, 90];
console.log(delete (numbers));

//console.log(numbers.splice(0,-1));


// Task 4 
//–î–∞–Ω –º–∞—Å—Å–∏–≤:

//    const students = ['Polina', 'Dasha', 'Masha']

//+ –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Borya`.
//+ –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Andrey`.
//+ –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.

const students = ['Polina', 'Dasha', 'Masha'];
console.log(students.pop()); 
console.log(students.shift()); 

// Task 5 

//–î–∞–Ω –º–∞—Å—Å–∏–≤:

 //   const cats = ['Gachito', 'Tom', 'Batman']

//–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª **`for`**, –∑–∞—Ç–µ–º **`for of`**.

const cats = ['Gachito', 'Tom', 'Batman'];
cats.length
 for (let i = 0; i < cats.length; i++) {
  console.log('Cats is ', cats[i]);
 };

  //for (const value of cats) {
  //   console.log('Cats is ', value);
 //}


// Task 6 

//+ –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
//+ –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ **`8`**


    const evenNumbers = [2, 4, 6, 8, 10];
    const oddNumbers = [1, 3, 5, 7, 9];
    const sumNumbers = evenNumbers.concat(oddNumbers);
    console.log(sumNumbers[8]);


    // Task 7 

   // –î–∞–Ω –º–∞—Å—Å–∏–≤:
    
    //  const binary = [0, 0, 0, 0]
     
   // + –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
    //+ –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.
    
    //> [0, 0, 0, 0] -> '0101010'
    
    const binary = [0, 0, 0, 0];
    const sbinary = binary.splice(1);
    const allbinary = sbinary.map((el)=>el +'1');
    const newbinary = allbinary.push('0');
    
    console.log(allbinary.join (''));

    // ADVANCED level

// –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã **`for`** –∏–ª–∏ **`for of`**

// Task 1 üë®

//–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.

isPalindrome = (string) => {
    if (string === string.split('').reverse().join('')) {
        console.log('is palindrome');
    }
    else {
        console.log('is not palindrome');
    }
}
 // isPalindrome(string);

// Task 2 

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.

    const matrix = [
        [12, 98, 78, 65, 23],
        [54, 76, 98, 43, 65],
        [13, 324, 65, 312],
        [9092, 22, 45, 90000],
    ]
    let Sum = 0;
    let Elements = 0;
    
    for (let i = 0; i < matrix.length; i++){
        for (let j = 0; j < matrix[i].length; j++){
            Sum += matrix[i][j];
            Elements++;
        }
    }
    
    console.log(Sum / Elements);

    // Task 3 üë®

    //–°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å. 

   const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]

   const result1 = mixedNumbers.filter((el) => el >= 0);
   console.log(result1);
   const result2 = mixedNumbers.filter((el) => el < 0);
   console.log(result2);

  