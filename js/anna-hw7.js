/* Task 1 üñ•
–í—ã–≤–µ–¥–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ forEach
const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function */

const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987];

fibonacci.forEach((el) => {
    console.log(el);
})

fibonacci.forEach(function fn (el) {
    console.log(el);
})


/* Task 2 üñ•
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ map —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ users, 
–≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:
['member 1: Darya', 'member 2: Masha', ... etc]
    const users = ['Darya', 'Masha', 'Denis', 'Vitaliy', 'Polina', 'Anton']
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function. */

const users = ['Darya', 'Masha', 'Denis', 'Vitaliy', 'Polina', 'Anton'];

const usersSecondArray = users.map((el, index) => `member ${index}: ` + el);
console.log(usersSecondArray);

const usersSecondArray = users.map(function(el, index) {
    return `member ${index}: ` + el;
});
console.log(usersSecondArray);


/* Task 3 üñ•
–° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ filter —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.
const numbers = [7, -4, 32, -90, 54, 32, -21]
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function. */

const numbers = [7, -4, 32, -90, 54, 32, -21];

const filteredNumbers = numbers.filter((el) => el >=0);
console.log(filteredNumbers);

const filteredNumbers = numbers.filter(function(el) {
    if (el >= 0) {
        return el; 
    }
});
console.log(filteredNumbers);


/* Task 4 üñ•
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ reduce –ø–æ–ª—É—á–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞.
const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function. */

const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987];

const SumOfNumbers = fibonacci.reduce((acc, cur) => {
    acc += cur;
    return acc;
}, 0);
console.log(SumOfNumbers);


const SumOfNumbers = fibonacci.reduce(function (acc, cur) {
    acc += cur;
    return acc;
}, 0); 
console.log(SumOfNumbers);


/* Task 5 üñ•
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ find –Ω–∞–π–¥–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ –ø–µ—Ä–≤–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ.
const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5]
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è function declaration & arrow function. */

const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5];
const firstEvenNumber = numbers.find((el) => el % 2 === 0);

const firstEvenNumber = numbers.find(function (el) {
    if (el % 2 === 0) {
        return el;
    }
})
console.log(firstEvenNumber);


/* ADVANCED level

/* Task 2 üë®‚Äçüè´ –¢—Ä–æ–ª–ª–∏ –∞—Ç–∞–∫—É—é—Ç –Ω–∞—à —Ä–∞–∑–¥–µ–ª —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!!!
–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–ª–∞—Å–Ω—ã–µ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Ç—Ä–æ–ª–ª–µ–π, –Ω–µ–π—Ç—Ä–∞–ª–∏–∑—É—è —É–≥—Ä–æ–∑—É.
–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –≥–ª–∞—Å–Ω—ã–º–∏.
–ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∞ ¬´This website is for losers LOL!¬ª —Å—Ç–∞–Ω–µ—Ç "Ths wbst s fr lsrs LL!".
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ y –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≥–ª–∞—Å–Ω–æ–π. */

function deleteVowel(str) {
    const strArr = str.split('');
    for (let i = 0; i < str.length; i++) {
      const letter = str[i].toLowerCase();
      if (letter == "a" || letter == "e" || letter == "i" || letter == "o" || letter == "u") {
        strArr[i] = '';
      }
    }
    return strArr.join('');
  }
  console.log(deleteVowel("This website is for losers LOL!"));


/*   Task 4 üë®‚Äçüè´ –°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –∏ —Å–∞–º—ã–π –Ω–∏–∑–∫–∏–π
  –í —ç—Ç–æ–º –Ω–µ–±–æ–ª—å—à–æ–º –∑–∞–¥–∞–Ω–∏–∏ –≤–∞–º –¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏, 
  –∏ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∏ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ.
      highAndLow("1 2 3 4 5"); // return "5 1"
      highAndLow("1 2 -3 4 5"); // return "5 -3"
      highAndLow("1 9 3 4 -5"); // return "9 -5"
  –°—Ç—Ä–æ–∫–∞ –≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º,
   –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º. */

const highAndLow = "1 2 3 4 5";

const min = Math.min(...highAndLow.split(" "));
const max = Math.max(...highAndLow.split(" "));
const resMaxAndMin = max + " " + min;
console.log(resMaxAndMin);


/* Task 5 üë®‚Äçüè´ –ò–∑–æ–≥—Ä–∞–º–º—ã
–ò–∑–æ–≥—Ä–∞–º–º–∞ - —ç—Ç–æ —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –±—É–∫–≤, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö. 
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –∏–∑–æ–≥—Ä–∞–º–º–æ–π. 
–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –º—ã –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.
    isIsogram("Dermatoglyphics") == true
    isIsogram("aba") == false
    isIsogram("moOse") == false // -- ignore letter case */

const checkIsogram = (str) => str.split("").every((a, b) => str.indexOf(a) == b);
console.log(checkIsogram("Ogogo"));
