'use strict';

// NORMAL level

// Task 1 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.


const colors = ['red', 'green', 'blue'];

console.log(colors.length);

// Task 2 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.

const animals = ['monkey', 'dog', 'cat'];

console.log(animals.at(-1));
console.log(animals.pop());

// Task 3 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.

const numbers = [5, 43, 63, 23, 90];

console.log(numbers.splice(0));
numbers.length = 0;
console.log(numbers);

// Task 4 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ Borya.
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ Andrey.
// –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.

const students = ['Polina', 'Dasha', 'Masha'];

students.splice(-1, 1, 'Borya');
console.log(students);

students.splice(0, 1, 'Andrey');
console.log(students);

// Task 5 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª for, –∑–∞—Ç–µ–º for of.

const cats = ['Gachito', 'Tom', 'Batman']

for (let i = 0; i < cats.length; i++ ) {
	console.log( cats[i] );
}

for (let cat of cats) {
	console.log(cat);}

// 	Task 6 üñ•
// –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
// –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ 8

const evenNumbers = [2, 4, 6, 8, 10]
const oddNumbers = [1, 3, 5, 7, 9]

const newNumbers = evenNumbers.concat(oddNumbers);
console.log(newNumbers);
console.log(newNumbers.indexOf(8));

// Task 7 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// const binary = [0, 0, 0, 0]
// –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
// –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.
// [0, 0, 0, 0] -> '0101010'

const binary = [0, 0, 0, 0];
const binaryString = binary.join('1');
console.log(binaryString);

// ADVANCED level
// –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã for –∏–ª–∏ for of

// Task 3 üë®‚Äçüè´
// –î–∞–Ω –º–∞—Å—Å–∏–≤:
// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å.


const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]

const plusNumbers = mixedNumbers.filter ((element) => element >= 0);
console.log(plusNumbers);

const minusNumbers = mixedNumbers.filter ((element) => element < 0);
console.log(minusNumbers);
